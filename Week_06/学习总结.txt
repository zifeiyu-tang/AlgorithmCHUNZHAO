#include <stdio.h>
#include <string.h>
#include <stdlib.h>


/**
     * 冒泡排序
     * @param arr
     */
     void bubbleSort(int *arr,int length) {
        if(arr==NULL || length < 2 ){
            return;
        }
        int i,j,temp;
        for (i = 0; i < length - 1; i++) {
            for (j = 0; j < length - i -1; j++) {
                if (arr[j] > arr[j + 1]) {
                    temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                }
            }
   }
}
/**
     * 选择排序
     * @param arr
     */
void selectSort(int *arr,int length) {
    if(arr==NULL || length < 2 ){
        return;
     }
    int i,j,temp,minkey;
    for (i = 0; i < length; i++) {
        minkey= arr[i];
        for (j = i; j < length ; j++) {            
            if (minkey > arr[j]) {                          
                temp = arr[j];
                arr[j] = minkey;
                minkey = temp;
               }
          }
        arr[i] = minkey;
     }
}

/**
     * 插入排序
    * @param arr
     */
void InsertionSort(int *arr,int length) {
    if(arr==NULL || length < 2 ){
        return;
     }
    int i,j,temp,key;
    for (i = 1; i < length; i++) {
        key= arr[i];
        for (j = i-1;j >=0 && arr[j] > key ; j--) {            
            arr[j + 1] = arr[j];
          }
        arr[j + 1] = key; 
     }
}

int main(int argc,char **argv)
{
    int arr[9] = {2,5,1,3,8,5,7,4,3};
    InsertionSort(arr,9);
     int i;       
    for(i=0;i<9;i++){
         printf("%d ",arr[i]);
     }
     printf("\n");

}


 不同路径 II 动态规划转移方程
f(i,j)  =  0; u(i,j) ==0
f(i,j) = f(i-1,j) + f(i,j-1); u(i,j) != 0






